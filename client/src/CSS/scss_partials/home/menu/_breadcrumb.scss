@use "../../utils/variables" as v;
@use "../../utils/mixins" as m;

// SCSS for classNames only used by the breadcrumb component
.breadcrumb-container,
.js-calc-breadcrumb-container {
	.invisible {
		visibility: hidden;
	}

	.breadcrumb-button {
		position: relative;
		float: left;
		// This background color should only appear if there was a problem
		// ...assigning a different background color to this element.
		// ...the scss for the colors assigned are in app.scss
		background-color: black;
		height: v.$navbar-height;
	}

	.breadcrumb-button--right {
		// Postion absolute instead of float right so that account button
		// ...will always remain on screen during screen resizing
		position: absolute;
		right: 0;
	}

	.breadcrumb-button--breadcrumb-arrow-buffered {
		margin-left: -(v.$navbar-breadcrumb-button-arrow-left-width);
		padding-left: v.$navbar-breadcrumb-button-arrow-left-width;
	}

	.breadcrumb-button__text,
	.js-calc-breadcrumb-text {
		@include m.stop-text-selection();

		position: relative;
		float: left;
		// Padding instead of margin since padding is included in element
		// ...size when resizing the breadcrumb menu
		padding: v.$navbar-button-text-container-padding;
		height: v.$navbar-height;
		font-family: Verdana, Geneva, sans-serif;
		font-size: v.$navbar-button-font-size;
		color: white;
		text-align: center;
		vertical-align: middle;
		// Allows vertical-align: middle to work
		line-height: v.$navbar-height;
	}

	.breadcrumb-button__text--item-name {
		color: v.$yellow;
	}

	.breadcrumb-button__end-container {
		position: relative;
		float: left;
		height: v.$navbar-height;
		width: v.$navbar-breadcrumb-button-arrow-left-width;
	}

	.breadcrumb-button__end-container__round-border {
		z-index: 5;
		position: absolute;
		top: -(v.$navbar-breadcrumb-border-width);
		left: -5px;
		border: v.$navbar-breadcrumb-border-width solid black;
		border-left: none;
		border-radius: 0 v.$navbar-breadcrumb-round-border-radius v.$navbar-breadcrumb-round-border-radius 0;
		height: v.$navbar-height;
		width: v.$navbar-breadcrumb-button-arrow-left-width;
	}

	.breadcrumb-button__end-container__arrow,
	.js-calc-breadcrumb-button-arrow {
		// Must have higher z-index than border-arrow below
		z-index: 5;
		position: absolute;
		top: v.$navbar-breadcrumb-arrow-top;
		left: v.$navbar-breadcrumb-arrow-left;
		border-top: v.$navbar-breadcrumb-button-arrow-top-bottom-width solid
			transparent;
		border-bottom: v.$navbar-breadcrumb-button-arrow-top-bottom-width solid
			transparent;
		border-left: v.$navbar-breadcrumb-button-arrow-left-width solid gray;
		height: 0;
		width: 0;
	}

	.breadcrumb-button__end-container__border-arrow {
		// Must have higher z-index of navbar-button
		z-index: 4;
		position: absolute;
		top: v.$navbar-breadcrumb-arrow-top;
		left: v.$navbar-breadcrumb-arrow-left + v.$navbar-breadcrumb-border-width;
		border-top: v.$navbar-breadcrumb-button-arrow-top-bottom-width solid
			transparent;
		border-bottom: v.$navbar-breadcrumb-button-arrow-top-bottom-width solid
			transparent;
		border-left: v.$navbar-breadcrumb-button-arrow-left-width solid black;
		height: 0;
		width: 0;
	}

	.breadcrumb-button__end-container__close-button {
		@include m.stop-text-selection();

		// Must have higher z-index than both arrows above
		z-index: 6;
		position: absolute;
		top: 20px;
		left: -8px;

		color: silver;
		opacity: 0.6;
		font-size: 18px;
		cursor: pointer;

		&:hover,
		&:active {
			opacity: 1;
			color: v.$bright-red;
		}
	}
}
