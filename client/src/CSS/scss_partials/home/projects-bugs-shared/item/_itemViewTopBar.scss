@use "../../../utils/variables" as v;
@use "../../../utils/mixins" as m;

.top-bar-component,
.js-calc-top-bar-component {
	// Must be more than the item-container in item-container.scss
	z-index: 1;
	position: fixed;
	top: v.$search-filter-sort-and-top-bar-top;
	border: v.$top-bar-border-width solid black;
	border-left: none;
	border-right: none;
	background-color: v.$search-filter-sort-bar-color;
	height: v.$top-bar-height;
	/* height: v.$search-filter-sort-bar-height; */
	width: 100%;
	font-family: Arial, Helvetica, sans-serif;

	.outer-search-container,
	.js-calc-outer-search-container {
		@include m.vertical-center();

		left: v.$item-search-bar-left;
		// This border color should only appear if there was a problem
		// ...assigning a different background color to this element.
		// ...the scss for the colors assigned are in home.scss
		border: 0px solid black;
		width: v.$item-search-bar-width;
	}

	.outer-search-container--with-border {
		border-width: v.$list-item-search-bar-group-container-border-width;
	}

	.outer-search-container--invisible {
		visibility: hidden;
	}

	.outer-search-container__search-bar {
		// Must be border-box because the zoom on the webpage can resize the border otherwise
		-webkit-box-sizing: border-box;
		-moz-box-sizing: border-box;
		box-sizing: border-box;

		display: inline-block;
		outline: none;
		// This border color should only appear if there was a problem
		// ...assigning a different background color to this element.
		// ...the scss for the colors assigned are in home.scss
		border: v.$list-search-bar-border-width solid black;
		padding: 0px v.$list-search-bar-padding 0px v.$list-search-bar-padding;
		height: v.$list-item-search-bar-height;
		width: v.$item-search-bar-width - v.$list-item-search-bar-button-width;
		font-size: v.$list-item-search-bar-font-size;
	}

	.outer-search-container__search-bar-button {
		// Instead of relative to make sure the button always stays next to the list-search-bar
		position: absolute;
		display: inline-block;
		// This background color should only appear if there was a problem
		// ...assigning a different background color to this element.
		// ...the scss for the colors assigned are in home.scss
		background-color: black;
		height: v.$list-item-search-bar-height;
		width: v.$list-item-search-bar-button-width;
		cursor: pointer;
	}

	.outer-search-container__search-bar-button__icon {
		@include m.dead-center();
		color: white;
		font-size: v.$list-item-search-bar-button-icon-font-size;
	}

	.filter-container,
	.js-calc-filter-container {
		position: absolute;
		left: v.$item-search-bar-width + (v.$item-search-bar-left * 2);
		/* width: 109px; */
	}

	.filter-container__button,
	.js-calc-filter-container__button {
		@include m.stop-text-selection();

		// Must be border-box because the zoom on the webpage can resize the border otherwise
		-webkit-box-sizing: border-box;
		-moz-box-sizing: border-box;
		box-sizing: border-box;

		// Must be more than filter-container__content-dropdown
		// ...so its top border can be covered to make the two containers look like one
		z-index: 1;
		position: absolute;
		top: 9px;
		border: 1px solid black;
		background-color: white;
		height: v.$search-filter-sort-bar-button-height;
		width: v.$filter-button-width;
		font-size: v.$top-bar-filter-button-font-size;
		text-align: center;
		cursor: pointer;
	}

	.filter-container__button--clicked {
		// Negative margin because border resize moves the element
		margin: -2px 0px;
		border: 3px solid black;
		border-bottom: none;
		height: 48px;
	}

	.filter-container__button__text--active {
		font-weight: bold;
		color: v.$filter-active-color;
	}

	.filter-container__button__text {
		// Used horizontal-center since resize would move the text
		@include m.horizontal-center();
		top: 4px;
		width: v.$filter-button-width;
	}

	.filter-container__content-dropdown {
		position: absolute;
		top: 52px;
		border: 3px solid black;
		background-color: white;
		height: v.$filter-dropdown-content-container-height;
		width: v.$filter-dropdown-content-container-width;
		cursor: default;
		// Made visible using JS
		visibility: hidden;
	}

	.filter-container__content-dropdown--shorter {
		height: 155px;
	}

	.filter-container__content-dropdown--visible {
		visibility: visible;
	}

	.filter-container__content-dropdown__content {
		float: left;
		margin: 15px 0px 5px 20px;
		text-align: center;
		font-size: v.$filter-dropdown-content-font-size;
	}

	.filter-container__content-dropdown__content--right {
		float: right;
		margin: 15px 20px 5px 0px;
	}

	.filter-container__content-dropdown__content__title {
		display: block;
		margin: 2px 0px 5px 0px;
		border-bottom: 1px solid gray;
		padding-bottom: 3px;
		font-weight: bold;
	}

	.filter-container__content-dropdown__content__block {
		text-align: left;
	}

	.filter-container__content-dropdown__content__block__checkbox,
	.filter-container__content-dropdown__content__block__label {
		margin: 5px 3px 5px 3px;
	}

	.filter-container__content-dropdown__content__block__label--active {
		color: v.$filter-active-color;
	}

	.item-options-container {
		position: absolute;
		top: 12px;
		right: 50px;
		width: 135px;
	}

	.item-options-container__button {
		// Must be more than item-options-container__dropdown so the two
		// ...containers can look like one
		z-index: 1;
		position: absolute;
		right: 0px;
		// Border given color through JS
		border: 3px solid transparent;
		border-bottom: none;
		background: none;
		height: 29px;
		width: v.$options-button-width;
		color: v.$darker-gray;
		font-size: 28px;
		text-align: center;
		cursor: pointer;

		&:hover,
		&:active {
			color: black;
		}
	}

	.item-options-container__button__text {
		@include m.dead-center();
	}

	.item-options-container__button--clicked {
		border-color: black;
		border-bottom-color: white;
		background-color: white;
	}

	.item-options-container__dropdown {
		position: absolute;
		top: 29px;
		right: 0;
		border: 3px solid black;
		background-color: white;
		width: 129px;
		// Defaults as being hidden
		visibility: hidden;
	}

	.item-options-container__dropdown--visible {
		visibility: visible;
	}

	.item-options-container__dropdown__option {
		display: block;
		border-bottom: 1px solid gray;
		padding: 12px;
		cursor: pointer;

		&:hover,
		&:active {
			background-color: v.$light-gray;
		}
	}

	.item-options-container__dropdown__option--no-display {
		display: none;
	}

	// Should be applied to the last option
	.item-options-container__dropdown__option--no-border {
		border-bottom: none;
	}

	.x-button {
		@include m.back-exit-buttons();
		top: 11px;
		right: 20px;
		color: v.$darker-gray;
	}
}
