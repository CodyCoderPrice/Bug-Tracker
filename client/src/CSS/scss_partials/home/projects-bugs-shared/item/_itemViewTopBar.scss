@use "../../../utils/variables" as v;
@use "../../../utils/mixins" as m;

.item-vew-top-bar-component,
.js-calc-item-vew-top-bar-component {
	// Must be more than list-sidebar so item-options-dropdown-container will
	// ...display overtop the list-sidebar if the screen gets too small
	z-index: 2;
	position: fixed;
	top: v.$top-bar-top;
	border: v.$top-bar-border-width solid v.$mode-top-bar-border-color-light;
	border-width: v.$top-bar-border-width 0 v.$item-view-list-sidebar-border-width 0;
	background-color: v.$mode-top-bar-background-color-light;
	height: v.$top-bar-height;
	/* height: v.$top-bar-height; */
	width: 100%;
	font-family: Arial, Helvetica, sans-serif;

	.outer-search-container,
	.js-calc-outer-search-container {
		@include m.vertical-center();

		left: v.$item-view-top-bar-search-bar-left;
		// This border color should only appear if there was a problem
		// ...assigning a different background color to this element.
		// ...the scss for the colors assigned are in app.scss
		border: 0px solid black;
		border-radius: v.$top-bar-buttton-border-radius;
		width: v.$item-view-top-bar-search-bar-width;
	}

	.outer-search-container--invisible {
		visibility: hidden;
	}

	.outer-search-container__search-bar {
		// Must be border-box because the zoom on the webpage can resize the border otherwise
		-webkit-box-sizing: border-box;
		-moz-box-sizing: border-box;
		box-sizing: border-box;

		display: inline-block;
		outline: none;
		// This border color should only appear if there was a problem
		// ...assigning a different background color to this element.
		// ...the scss for the colors assigned are in app.scss
		border: v.$top-bar-search-bar-border-width solid black;
		border-right: none;
		border-radius: v.$top-bar-buttton-border-radius 0 0 v.$top-bar-buttton-border-radius;
		padding: 0px v.$top-bar-search-bar-padding 0px v.$top-bar-search-bar-padding;
		background-color: v.$mode-top-bar-search-bar-background-color-light;
		height: v.$top-bar-search-bar-height;
		width: v.$item-view-top-bar-search-bar-width - v.$top-bar-search-bar-button-width;
		font-size: v.$top-bar-search-bar-font-size;
	}

	.outer-search-container__search-bar-button {
		// Must be border-box because the zoom on the webpage can resize the border otherwise
		-webkit-box-sizing: border-box;
		-moz-box-sizing: border-box;
		box-sizing: border-box;

		// Instead of relative to make sure the button always stays next to the list-search-bar
		position: absolute;
		display: inline-block;
		border-radius: 0 v.$top-bar-buttton-border-radius v.$top-bar-buttton-border-radius 0;
		// This background color should only appear if there was a problem
		// ...assigning a different background color to this element.
		// ...the scss for the colors assigned are in app.scss
		background-color: black;
		height: v.$top-bar-search-bar-height;
		width: v.$top-bar-search-bar-button-width;
		cursor: pointer;
	}

	.outer-search-container__search-bar-button__icon {
		@include m.dead-center();
		color: white;
		font-size: v.$top-bar-search-bar-button-icon-font-size;
	}

	.search-bar-and-button-thick-border {
		border-width: v.$top-bar-search-bar-focus-border-width;
		height: v.$top-bar-button-focus-height;
	}

	.list-sort-filter-container {
		position: absolute;
		left: v.$item-view-top-bar-sort-button-left;
	}

	.list-sort-filter-container--filter-placement {
		left: v.$item-view-top-bar-filter-button-left;
	}

	.list-sort-filter-container__button {
		@include m.stop-text-selection();

		// Must be more than list-sort-filter-container__content-dropdown
		// ...so its top border can be covered to make the two containers look like one
		z-index: 1;
		position: absolute;
		top: 9px;
		border: v.$top-bar-base-button-border-width solid v.$mode-top-bar-button-border-color-light;
		border-radius: v.$top-bar-buttton-border-radius;
		background-color: v.$mode-top-bar-button-background-color-light;
		height: v.$top-bar-button-height;
		width: v.$top-bar-sort-button-width;
		color: v.$mode-top-bar-button-text-color-light;
		font-size: v.$top-bar-filter-button-font-size;
		text-align: center;
		cursor: pointer;
	}

	.list-sort-filter-container__button--filter-width {
		width: v.$top-bar-filter-button-width;
	}

	.list-sort-filter-container__button--clicked {
		// Negative margin because border resize moves the element
		margin: -2px 0px;
		border: v.$top-bar-clicked-dropdown-button-border-width solid black;
		border-radius: v.$top-bar-buttton-border-radius v.$top-bar-buttton-border-radius 0 0;
		border-bottom: none;
		height: 45px;
		width: v.$top-bar-sort-button-width - (v.$top-bar-clicked-dropdown-button-border-width-difference * 2);
	}

	.list-sort-filter-container__button--clicked-filter-width {
		width: v.$top-bar-filter-button-width - (v.$top-bar-clicked-dropdown-button-border-width-difference * 2);
	}

	.list-sort-filter-container__button__text--active {
		font-weight: bold;
		color: v.$filter-button-active-color;
	}

	.list-sort-filter-container__button__text {
		// Used horizontal-center since resize would move the text
		@include m.horizontal-center();
		top: 4px;
		width: 100%;
	}

	.list-sort-filter-container__button__text--filter-width {
		width: v.$top-bar-filter-button-width;
	}

	.list-sort-filter-container__content-dropdown {
		// Must be border-box because the zoom on the webpage can resize the border otherwise
		-webkit-box-sizing: border-box;
		-moz-box-sizing: border-box;
		box-sizing: border-box;

		position: absolute;
		// Additional 0.2px to fix border overflow in chrome and edge
		top: 52.2px;
		border: 3px solid black;
		border-radius: 0 v.$top-bar-buttton-border-radius v.$top-bar-buttton-border-radius v.$top-bar-buttton-border-radius;
		background-color: white;
		height: v.$top-bar-filter-dropdown-content-container-height;
		width: v.$top-bar-sort-dropdown-content-container-width;
		cursor: default;
		// Made visible using JS
		visibility: hidden;
	}

	.list-sort-filter-container__content-dropdown__sort-content-block {
		position: relative;
		margin: 12.5px 0;
		width: 100%;
	}

	.list-sort-filter-container__content-dropdown__sort-content-block__sort-arrows-container {
		display: inline-block;
		margin-left: 8px;
		height: 100%;
		// Since sort-arrow-buttons use m.vertical-center(), width is used
		// ...instead of margin-right
		width: 21px;
	}

	.list-sort-filter-container__content-dropdown__sort-content-block__title {
		font-size: 15px;
	}

	.list-sort-filter-container__content-dropdown--filter-width {
		width: v.$top-bar-filter-dropdown-content-container-width;
	}

	.list-sort-filter-container__content-dropdown--shorter {
		height: v.$top-bar-filter-dropdown-content-container-shorter-height;
	}

	.list-sort-filter-container__content-dropdown--visible {
		visibility: visible;
	}

	.list-sort-filter-container__content-dropdown__filter-content {
		float: left;
		margin: v.$top-bar-filter-button-dropdown-title-margin-top 0 0 v.$top-bar-filter-button-dropdown-title-margin-on-one-side;
		text-align: center;
		font-size: v.$filter-dropdown-content-font-size;
	}

	.list-sort-filter-container__content-dropdown__filter-content--right {
		float: right;
		margin: v.$top-bar-filter-button-dropdown-title-margin-top v.$top-bar-filter-button-dropdown-title-margin-on-one-side 0 0;
	}

	.list-sort-filter-container__content-dropdown__filter-content__title {
		display: block;
		margin: 2px 0px 5px 0px;
		border-bottom: 1px solid gray;
		padding-bottom: 3px;
		font-weight: bold;
	}

	.list-sort-filter-container__content-dropdown__filter-content__block {
		text-align: left;
	}

	.list-sort-filter-container__content-dropdown__filter-content__block__checkbox-container {
		display: inline-block;
		margin: v.$top-bar-filter-button-dropdown-checkbox-container-margin;
	}

	.list-sort-filter-container__content-dropdown__filter-content__block__label {
		display: inline-block;
		margin: v.$top-bar-filter-button-dropdown-label-margin;
	}

	.list-sort-filter-container__content-dropdown__filter-content__block__label--active {
		color: v.$filter-button-active-color;
	}

	.item-options-container {
		position: absolute;
		top: 12px;
		right: 50px;
		width: 135px;
	}

	.item-options-container__button {
		// Must be more than item-options-container__dropdown so the two
		// ...containers can look like one
		z-index: 1;
		position: absolute;
		right: 0px;
		// Border given color through JS
		border: v.$top-bar-clicked-dropdown-button-border-width solid transparent;
		border-radius: v.$top-bar-buttton-border-radius v.$top-bar-buttton-border-radius 0 0;
		border-bottom: none;
		background: none;
		height: 29px;
		width: v.$options-button-width;
		color: v.$darker-icon-button-gray;
		font-size: 28px;
		text-align: center;
		cursor: pointer;

		&:hover,
		:active {
			color: v.$mode-base-icon-button-hover-text-color-light;
		}
	}

	.item-options-container__button__text {
		@include m.dead-center();
	}

	.item-options-container__button--clicked {
		border-color: black;
		border-bottom: none;
		background-color: white;
		color: v.$mode-base-icon-button-hover-text-color-light;
	}

	.item-options-container__dropdown {
		position: absolute;
		top: 29px;
		right: 0;
		border: 3px solid black;
		border-radius: v.$top-bar-buttton-border-radius 0 v.$top-bar-buttton-border-radius v.$top-bar-buttton-border-radius;
		background-color: white;
		color: v.$mode-item-view-top-bar-icon-button-text-color-light;
		width: 129px;
		// Defaults as being hidden
		visibility: hidden;
	}

	.item-options-container__dropdown--visible {
		visibility: visible;
	}

	.item-options-container__dropdown__option {
		display: block;
		border-bottom: 1px solid gray;
		padding: 12px;
		cursor: pointer;

		&:hover,
		:active {
			background-color: v.$mode-item-view-top-bar-options-dropdown-row-hover-background-color-light;
		}
	}

	.item-options-container__dropdown__option--no-display {
		display: none;
	}

	// Should be applied to the last option
	.item-options-container__dropdown__option--no-border {
		border-bottom: none;
	}

	.x-button {
		@include m.exit-button();
		top: 11px;
		color: v.$mode-item-view-top-bar-icon-button-text-color-light;
	}
}
